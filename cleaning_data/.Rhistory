"hello world"
r <- "hello, world"
print(r)
clear
a <- available.packages()
head(rownames(a), 3)
head(rownames(a), 5)
install.packages("slidify", "ggplot2", "devtools")
install.packages("devtools")
install.packages(slidify)
install.packages("slidify")
install.packages("ggplot2")
install.packages("KernSmooth")
library(KernSmooth)
cd
read.csv('hw1_data.csv')
read.csv('hw1_data.csv')
read.csv('/Users/raphael/Downloads/hw1_data.csv')
install.packages("swirl")
packageVersion("swirl")
library(swirl)
install_from_swirl("R Programming")
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
c(1.1, 9, 3.13)
c(1.1, 9, 3.14)
c(1.1, 9, 3.14)
c(1.1, 9, 3.14)
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args(list.files())
?args
args(list.files
)
old.dir <- getwd()
dir.create("testdir")
setwd("testdir")
file.create("mttest.R")
?file.create
file.create("mytest.R")
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest2.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path()
file.path("mytest3.R")
?file.path
file.path("mytest3.R", 'folder1', 'folder2')
info()
file.path('folder1', 'folder2')
?dir.create
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
setwd(old.dir)
y <- 2 + 3
swirl
swirl()
library(swirl)
ls()
rm(list(ls()))
rm(list=ls())
library(swirl)
swirl()
Sys.Date()
mean(c(2, 4, 5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4, 5, 10))
submit()
remainder(5)
remaindr(11, 5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
submit()
evaluate(c(1.4, 3.6, 7.9, 8.8))
evaluate(std, c(1.4, 3.6, 7.9, 8.8))
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(9, 4, 0))
evaluate(function(x){x[[1]]}, c(9, 4, 0))
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){x[len(x)]}, c(8, 4, 0))
evaluate(function(x){x[length(x)]}, c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("galo", "doido")
submit()
mad_libs(place = "galo", adjective = "doido", noun = "foda")
submit()
"Hello" %p% "student!"
submit()
"Hello" %p% "student!"
submit()
submit()
?concat
?cat
submit()
submit()
submit()
?paste
submit()
'I' %p% 'love' %p% 'R'
'I' %p% 'love' %p% 'R!'
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
Sys.time()
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
sapply(flags, class)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_collors <- flags[, 11:17]
flag_colors <- flags[, 11:17]
head(flag_collors)
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 6, 6))
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique()
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags?animate)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
library(datasets)
data(iris)
?iris
dims(iris)
dim(iris)
iris$Sepal.Length
iris$Species
tapply(iris$Species, iris$Sepal.Length, mean)
iris_virginica <- iris[iris$Species == "virginica"]
iris$Species == "virginica"
iris_virginica <- iris[iris$Species == "virginica"]
condition <- iris$Species == "virginica"
iris_virginica <- iris[condition]
iris_virginica
iris_virginica
?subset
iris_virginica <- subset(iris, Species == "virginica")
iris_virginica
sapply(iris_virginica$Sepal.Length, mean)
sapply(iris_virginica, mean
)
apply(iris[, 1:4], 1, mean
)
apply(iris[, 1:4], 2, mean)
apply(iris, 2, mean)
library(mtcars)
library(datasets)
data(mtcars)
?mtcars
tapply(mtcars$cyl, mtcars$mpg, mean)
?tapply
tapply(mtcars$mpg, mtcars$cyl, mean)
sapply(mtcars, cyl, mean)
mean(mtcars$mpg, mtcars$cyl)
split(mtcars, mtcars$cyl)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
lapply(mtcars, mean)
apply(mtcars, 2, mean)
with(mtcars, tapply(mpg, cyl, mean))
?mtcar
?mtcars
tapply(mtcars$hp, mtcars$cyl, mean)
vec <- tapply(mtcars$mpg, mtcars$cyl, mean)
vec[3]
vec[1]
horse <- tapply(mtcars$hp, mtcars$cyl, mean)
horse[1]
horse$1
horse[[1]]
abs(horse[[1]] = horse[[3]])
abs(horse[[1]] - horse[[3]])
debug(ls)
n
debug(ls)
debug(ls)
ls(2)
set.seed(1)
rpois(5, 2)
library(swirl)
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
class(table(plants$Active_Growth_Period))
str(pkants)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
flips <- sample(c(0,1), 100, prob = c(0.3, 0.7), replace = TRUE)
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, 100, 25)
rpos(5, 10)
rpois(5, 10)
replicate(100, rpois(5, 10))
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(cars$speed, cars$dist)
plot(cars)
plot(x = cars$dist, y = cars$speed)
?plot
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance", xlab = "Speed")
plot(cars, main = "My Plot")
?plot
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
plot(cars, xlim = c(10, 15))
plot(cars, pch = 2)
data("mtcars")
data(mtcars)
?boxplot
boxplot(mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
setwd("/Users/raphael/coursera-repo/cleaning_data")
library("xlsx")
install.packages("rJava")
library("xlsx")
library("xlsx")
library(rJava)
> .jinit()
> .jcall("java/lang/System", "S", "getProperty", "java.runtime.version")
[1] "1.7.0_75-b13"
install.packages("XML")
library(XML)
fileurl <- https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml
fileurl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileurl, useInternal = TRUE)
fileurl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileurl, useInternal = TRUE)
doc <- xmlTreeParse("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", useInternal = TRUE)
question_5_data <- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", destfile = "/Users/raphael/coursera-repo/cleaning_data/quiz_1_question_5.csv", method = "curl")
?read.csv
file <- read.csv("quiz_1_question_5.csv", sep = ",", header = TRUE)
head(file)
file <- fread("quiz_1_question_5.csv")
class(file)
?data.table
data.table(file)
??data.table
install.packages("data.table")
?data.table
library(data.table)
